name: DEPLOY AND BUILD
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  coding-standard:
    name: Coding Standard
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
      options: --privileged
      env:
        DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          coverage: xdebug
          tools: composer

      - name: Install and enable Xdebug
        run: |
          apt-get update
          apt-get install -y php-dev php-pear
          pecl install xdebug
          echo "zend_extension=xdebug.so" > /etc/php/8.4/cli/conf.d/xdebug.ini
          php -v

      - name: Get composer cache directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y aspell aspell-en
          composer install --no-progress --no-suggest --prefer-dist --no-interaction

      - name: Check coding style
        run: composer lint

      - name: Run tests
        run: composer tests

      - name: Run test coverage
        run: composer test-coverage

# --- uncomment lines at deploy on server
#  deploy:
#    runs-on: [ ubuntu-latest ]
#    # used your GitHub environment
#    environment: your_environment
#    needs: coding-standard
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - uses: actions/checkout@v4.2.2
#      - name: Push to server
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SERVER_IP }}
#          username: ${{ secrets.SERVER_USERNAME }}
#          password: ${{ secrets.SERVER_PASSWORD }}
#          script: |
#            cd ${{ secrets.PROJECT_PATH }}
#            make update-project
